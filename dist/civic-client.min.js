function appConfig(e){"use strict";console.log("appConfig() called."),e.state("login",{url:"/login",templateUrl:"/civic-client/login/login.html",controller:"LoginCtrl"})}function appRun(){}function RetryQueue(e,n){"use strict";var t=[],i={onItemAddedCallbacks:[],hasMore:function(){return t.length>0},push:function(e){t.push(e),angular.forEach(i.onItemAddedCallbacks,function(t){try{t(e)}catch(i){n.error("securityRetryQueue.push(retryItem): callback threw an error"+i)}})},pushRetryFn:function(n,t){1===arguments.length&&(t=n,n=void 0);var r=e.defer(),o={reason:n,retry:function(){e.when(t()).then(function(e){r.resolve(e)},function(e){r.reject(e)})},cancel:function(){r.reject()}};return i.push(o),r.promise},retryReason:function(){return i.hasMore()&&t[0].reason},cancelAll:function(){for(;i.hasMore();)t.shift().cancel()},retryAll:function(){for(n.info("RetryQueue.retryall() called.");i.hasMore();)t.shift().retry()}};return i}function LoginFormController(e,n){e.user={},e.authError=null,e.authReason=null,n.getLoginReason()&&(e.authReason=n.isAuthenticated()?"NOT AUTHORIZED":"NOT AUTHENTICATED"),e.login=function(){e.authError=null,n.login(e.user.email,e.user.password).then(function(n){n||(e.authError="INVALID CREDENTIALS")},function(){e.authError="SERVER ERROR"})},e.clearForm=function(){e.user={}},e.cancelLogin=function(){n.cancelLogin()}}function loginToolbar(e){var n={templateUrl:"common/security/login/loginToolbar.tpl.html",restrict:"E",replace:!0,scope:!0,link:function(n){n.isAuthenticated=e.isAuthenticated,n.login=e.showLogin,n.logout=e.logout,n.$watch(function(){return e.currentUser},function(e){n.currentUser=e})}};return n}function sessionInfo(e,n){"use strict";return{restrict:"EA",template:"<h2>CIViC Server URL: {{ conf.serverUrl }}</h2>",link:function(t){n.info("sessionInfo directive loaded."),t.conf=e}}}function InterceptorService(e,n){return function(t){return t.then(null,function(i){return 401===i.status&&(t=n.pushRetryFn("unauthorized-server",function(){return e.get("$http")(i.config)})),t})}}function interceptorServiceConfig(e){e.responseInterceptors.push("InterceptorService")}function LoginCtrl(e){e.info("LoginCtrl instantiated")}function SecurityService(e,n,t,i,r,o){"use strict";function c(e){e=e||"/",t.path(e)}function u(){if(s)throw new Error("Trying to open a dialog that is already open!");s=o.create("common/security/login/LoginForm.tpl.html","LoginFormController",{},"lg"),s.result.then(a)}function l(e){i.info("SecurityService.closeLoginDialog() called."),s&&s.close(e)}function a(e){s=null,e?r.retryAll():(r.cancelAll(),c())}var s=null;r.onItemAddedCallbacks.push(function(){r.hasMore()&&g.showLogin()});var g={getLoginReason:function(){return r.retryReason()},showLogin:function(){u()},login:function(n,t){var i=e.post("/login",{email:n,password:t});return i.then(function(e){return g.currentUser=e.data.user,g.isAuthenticated()&&l(!0),g.isAuthenticated()})},cancelLogin:function(){l(!1),c()},logout:function(n){e.post("/logout").then(function(){g.currentUser=null,c(n)})},requestCurrentUser:function(){return g.isAuthenticated()?n.when(g.currentUser):e.get("/api/current_user.json").then(function(e){return g.currentUser=e.data.email,g.currentUser})},currentUser:null,isAuthenticated:function(){return!0},isAdmin:function(){return!(!g.currentUser||!g.currentUser.admin)}};return g}function pagesConfig(e,n,t){$log.info("pagesConfig called."),e.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"/civic-client/pages/home.html",resolve:t.requireAuthenticatedUser})}function HomeCtrl(e){e.info("HomeCtrl instantiated")}angular.module("civicClient",["ui.router","ui.bootstrap","dialogs.main","civic.pages","civic.security","civic.services","civic.common","civic.pages","civic.login","civic-client-templates"]).config(appConfig).run(appRun),angular.module("civic.services",[]),angular.module("civic.common",[]),angular.module("civic.pages",[]),angular.module("civic.login",[]),angular.module("civic.browse",[]),angular.module("civic.search",[]),angular.module("civic.gene",[]),angular.module("civic.event",[]),angular.module("civic.evidence",[]),appConfig.$inject=["$stateProvider","$urlRouterProvider"],appRun.$inject=["$rootScope","$state"],function(e){try{e=angular.module("civic-client-templates")}catch(n){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/login/login.html","<h1>Login</h1>")}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(n){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/pages/home.html","<h1>Home</h1><session-info></session-info><login-toolbar></login-toolbar>")}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(n){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/common/security/login/LoginForm.tpl.html",'<form name="form" novalidate class="login-form"><div class="modal-header"><h4>Sign in</h4></div><div class="modal-body"><div class="alert alert-warning" ng-show="authReason">{{authReason}}</div><div class="alert alert-error" ng-show="authError">{{authError}}</div><div class="alert alert-info">Login by choosing one of the methods below:</div><ul><li><a href="api/auth/github">Login with Github</a></li></ul></div><div class="modal-footer"><button class="btn btn-primary login" ng-click="login()" ng-disabled="form.$invalid">Sign in</button> <button class="btn clear" ng-click="clearForm()">Clear</button> <button class="btn btn-warning cancel" ng-click="cancelLogin()">Cancel</button></div></form>')}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(n){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/common/security/login/loginToolbar.tpl.html",'<ul class="nav pull-right"><li class="divider-vertical"></li><li ng-show="isAuthenticated()"><a href="#">{{currentUser.firstName}} {{currentUser.lastName}}</a></li><li ng-show="isAuthenticated()" class="logout"><form class="navbar-form"><button class="btn logout" ng-click="logout()">Log out</button></form></li><li ng-hide="isAuthenticated()" class="login"><form class="navbar-form"><button class="btn login" ng-click="login()">Log in</button></form></li></ul>')}])}(),angular.module("civic.security.retryQueue",[]).factory("RetryQueue",RetryQueue),RetryQueue.$inject=["$q","$log"],angular.module("civic.security.login.form",[]).controller("LoginFormController",LoginFormController),LoginFormController.$inject=["$scope","SecurityService"],angular.module("civic.security.login.toolbar",[]).directive("loginToolbar",loginToolbar),loginToolbar.$inject=["SecurityService"],angular.module("civic.common").directive("sessionInfo",sessionInfo),sessionInfo.$inject=["ConfigService","$log"],angular.module("civic.security.interceptor",["civic.security.retryQueue"]).factory("InterceptorService",InterceptorService).config(interceptorServiceConfig),InterceptorService.$inject=["$injector","RetryQueue"],angular.module("civic.security.login",["civic.security.login.form","civic.security.login.toolbar"]),angular.module("civic.services").constant("ConfigService",{serverUrl:"http://localhost:3000/"}),angular.module("civic.login").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["$log"],angular.module("civic.security.service",["civic.security.retryQueue","civic.security.login","dialogs.main"]).factory("SecurityService",SecurityService),SecurityService.$inject=["$http","$q","$location","$log","RetryQueue","dialogs"],angular.module("civic.security.authorization",["civic.security.service"]).provider("AuthService",{requireAdminUser:function(e){return e.requireAdminUser()},requireAuthenticatedUser:function(e){return e.requireAuthenticatedUser()},$get:["SecurityService","RetryQueue",function(e,n){var t={requireAuthenticatedUser:function(){var i=e.requestCurrentUser().then(function(){return e.isAuthenticated()?void 0:n.pushRetryFn("unauthenticated-client",t.requireAuthenticatedUser)});return i},requireAdminUser:function(){var i=e.requestCurrentUser().then(function(){return e.isAdmin()?void 0:n.pushRetryFn("unauthorized-client",t.requireAdminUser)});return i}};return t}]}),angular.module("civic.security",["civic.security.service","civic.security.interceptor","civic.security.login","civic.security.authorization"]),angular.module("civic.pages",["civic.security.authorization"]).config(pagesConfig),pagesConfig.$inject=["$stateProvider","$urlRouterProvider","AuthService"],angular.module("civic.pages").controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=["$log"];