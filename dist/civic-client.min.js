function appConfig(e,t){"use strict";e.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"/civic-client/pages/home.html",authenticate:!0}).state("login",{url:"/login",templateUrl:"/civic-client/login/login.html",controller:"LoginCtrl",authenticate:!1}),t.otherwise("/home")}function appRun(){}function sessionInfo(e,t){"use strict";return{restrict:"EA",template:"<h2>CIViC Server URL: {{ conf.serverUrl }}</h2>",link:function(n){t.info("sessionInfo directive loaded."),n.conf=e}}}function LoginCtrl(e){e.info("LoginCtrl instantiated")}function HomeCtrl(e){e.info("HomeCtrl instantiated")}angular.module("civicClient",["ui.router","ui.bootstrap","civic.security","civic.services","civic.common","civic.pages","civic.login","civic-client-templates"]).config(appConfig).run(appRun),angular.module("civic.services",[]),angular.module("civic.common",[]),angular.module("civic.pages",[]),angular.module("civic.login",[]),angular.module("civic.browse",[]),angular.module("civic.search",[]),angular.module("civic.gene",[]),angular.module("civic.event",[]),angular.module("civic.evidence",[]),appConfig.$inject=["$stateProvider","$urlRouterProvider"],appRun.$inject=["$rootScope","$state"],function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/login/login.html","<h1>Login</h1>")}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/pages/home.html","<h1>Home</h1><session-info></session-info>")}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/common/security/login/form.tpl.html",'<form name="form" novalidate class="login-form"><div class="modal-header"><h4>Sign in</h4></div><div class="modal-body"><div class="alert alert-warning" ng-show="authReason">{{authReason}}</div><div class="alert alert-error" ng-show="authError">{{authError}}</div><div class="alert alert-info">Please enter your login details</div><label>E-mail</label><input name="login" type="email" ng-model="user.email" required autofocus><label>Password</label><input name="pass" type="password" ng-model="user.password" required></div><div class="modal-footer"><button class="btn btn-primary login" ng-click="login()" ng-disabled="form.$invalid">Sign in</button> <button class="btn clear" ng-click="clearForm()">Clear</button> <button class="btn btn-warning cancel" ng-click="cancelLogin()">Cancel</button></div></form>')}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/common/security/login/toolbar.tpl.html",'<ul class="nav pull-right"><li class="divider-vertical"></li><li ng-show="isAuthenticated()"><a href="#">{{currentUser.firstName}} {{currentUser.lastName}}</a></li><li ng-show="isAuthenticated()" class="logout"><form class="navbar-form"><button class="btn logout" ng-click="logout()">Log out</button></form></li><li ng-hide="isAuthenticated()" class="login"><form class="navbar-form"><button class="btn login" ng-click="login()">Log in</button></form></li></ul>')}])}(),angular.module("security.authorization",["security.service"]).provider("AuthService",{requireAdminUser:["AuthService",function(e){return e.requireAdminUser()}],requireAuthenticatedUser:["AuthService",function(e){return e.requireAuthenticatedUser()}],$get:["security","securityRetryQueue",function(e,t){var n={requireAuthenticatedUser:function(){var r=e.requestCurrentUser().then(function(){return e.isAuthenticated()?void 0:t.pushRetryFn("unauthenticated-client",n.requireAuthenticatedUser)});return r},requireAdminUser:function(){var r=e.requestCurrentUser().then(function(){return e.isAdmin()?void 0:t.pushRetryFn("unauthorized-client",n.requireAdminUser)});return r}};return n}]}),angular.module("civic.security.retryQueue",[]).factory("RetryQueue",["$q","$log",function(e,t){"use strict";var n=[],r={onItemAddedCallbacks:[],hasMore:function(){return n.length>0},push:function(e){n.push(e),angular.forEach(r.onItemAddedCallbacks,function(n){try{n(e)}catch(r){t.error("securityRetryQueue.push(retryItem): callback threw an error"+r)}})},pushRetryFn:function(t,n){1===arguments.length&&(n=t,t=void 0);var i=e.defer(),o={reason:t,retry:function(){e.when(n()).then(function(e){i.resolve(e)},function(e){i.reject(e)})},cancel:function(){i.reject()}};return r.push(o),i.promise},retryReason:function(){return r.hasMore()&&n[0].reason},cancelAll:function(){for(;r.hasMore();)n.shift().cancel()},retryAll:function(){for(;r.hasMore();)n.shift().retry()}};return r}]),angular.module("civic.security.login.form",[]).controller("LoginFormController",["$scope","security",function(e,t){e.user={},e.authError=null,e.authReason=null,t.getLoginReason()&&(e.authReason=t.isAuthenticated()?"NOT AUTHORIZED":"NOT AUTHENTICATED"),e.login=function(){e.authError=null,t.login(e.user.email,e.user.password).then(function(t){t||(e.authError="INVALID CREDENTIALS")},function(){e.authError="SERVER ERROR"})},e.clearForm=function(){e.user={}},e.cancelLogin=function(){t.cancelLogin()}}]),angular.module("civic.security.login.toolbar",[]).directive("loginToolbar",["security",function(e){var t={templateUrl:"security/login/toolbar.tpl.html",restrict:"E",replace:!0,scope:!0,link:function(t){t.isAuthenticated=e.isAuthenticated,t.login=e.showLogin,t.logout=e.logout,t.$watch(function(){return e.currentUser},function(e){t.currentUser=e})}};return t}]),angular.module("civic.common").directive("sessionInfo",sessionInfo),sessionInfo.$inject=["ConfigService","$log"],angular.module("civic.security.interceptor",["civic.security.retryQueue"]).factory("securityInterceptor",["$injector","RetryQueue",function(e,t){return function(n){return n.then(null,function(r){return 401===r.status&&(n=t.pushRetryFn("unauthorized-server",function(){return e.get("$http")(r.config)})),n})}}]).config(["$httpProvider",function(e){e.responseInterceptors.push("securityInterceptor")}]),angular.module("civic.security.login",["civic.security.login.form","civic.security.login.toolbar"]),angular.module("civic.services").constant("ConfigService",{serverUrl:"http://localhost:3000/"}),angular.module("civic.login").controller("LoginCtrl",LoginCtrl),LoginCtrl.$inject=["$log"],angular.module("civic.pages").controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=["$log"],angular.module("civic.security.service",["civic.security.retryQueue","civic.security.login","ui.bootstrap.modal"]).factory("security",["$http","$q","$location","queue","$modal",function(e,t,n,r,i){"use strict";function o(e){e=e||"/",n.path(e)}function c(){if(a)throw new Error("Trying to open a dialog that is already open!");a=i.dialog(),a.open("security/login/form.tpl.html","LoginFormController").then(l)}function u(e){a&&a.close(e)}function l(e){a=null,e?r.retryAll():(r.cancelAll(),o())}var a=null;r.onItemAddedCallbacks.push(function(){r.hasMore()&&s.showLogin()});var s={getLoginReason:function(){return r.retryReason()},showLogin:function(){c()},login:function(t,n){var r=e.post("/login",{email:t,password:n});return r.then(function(e){return s.currentUser=e.data.user,s.isAuthenticated()&&u(!0),s.isAuthenticated()})},cancelLogin:function(){u(!1),o()},logout:function(t){e.post("/logout").then(function(){s.currentUser=null,o(t)})},requestCurrentUser:function(){return s.isAuthenticated()?t.when(s.currentUser):e.get("/current-user").then(function(e){return s.currentUser=e.data.user,s.currentUser})},currentUser:null,isAuthenticated:function(){return!!s.currentUser},isAdmin:function(){return!(!s.currentUser||!s.currentUser.admin)}};return s}]),angular.module("civic.security",["civic.security.service","civic.security.interceptor","civic.security.login","civic.security.authorization"]);