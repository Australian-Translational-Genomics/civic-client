function loginToolbar(e){"use strict";var t={templateUrl:"common/security/login/loginToolbar.tpl.html",restrict:"E",replace:!0,scope:!0,link:function(t){t.isAuthenticated=e.isAuthenticated,t.login=e.showLogin,t.logout=e.logout,t.$watch(function(){return e.currentUser},function(e){t.currentUser=e})}};return t}function LoginFormController(e,t){"use strict";e.user={},e.authError=null,e.authReason=null,t.getLoginReason()&&(e.authReason=t.isAuthenticated()?"NOT AUTHORIZED":"NOT AUTHENTICATED"),e.login=function(){e.authError=null,t.login(e.user.email,e.user.password).then(function(t){t||(e.authError="INVALID CREDENTIALS")},function(){e.authError="SERVER ERROR"})},e.clearForm=function(){e.user={}},e.cancelLogin=function(){t.cancelLogin()}}function appConfig(e,t){"use strict";t.otherwise("home")}function appRun(e){"use strict";e.requestCurrentUser()}function HomeCtrl(e,t,i){"use strict";i.info("HomeCtrl instantiated"),e.navMode="home",e.viewTitle="Home",t.loadedMsg="Loaded Home!"}function AuthTestCtrl(e,t,i){"use strict";i.info("AuthTestCtrl loaded."),t.navMode="sub",t.viewTitle="AuthTest",i.info("AuthTest loaded."),e.loadedMsg="Loaded AuthTest!"}function Security(e,t,i,n,r,o){"use strict";function c(e){e=e||"/",i.path(e)}function u(){if(s)throw new Error("Trying to open a dialog that is already open!");s=r.create("common/security/login/LoginForm.tpl.html","LoginFormController",{},"lg"),s.result.then(a)}function l(e){o.info("Security.closeLoginDialog() called."),s&&s.close(e)}function a(e){s=null,e?n.retryAll():(n.cancelAll(),c())}var s=null;n.onItemAddedCallbacks.push(function(){n.hasMore()&&g.showLogin()});var g={getLoginReason:function(){return n.retryReason()},showLogin:function(){u()},login:function(){var t=e.get("/api/current_user.json");return t.then(function(e){return g.currentUser=e.data.user,g.isAuthenticated()&&l(!0),g.isAuthenticated()})},cancelLogin:function(){l(!1),c()},logout:function(t){e.get("/api/sign_out").then(function(){g.currentUser=null,c(t)})},requestCurrentUser:function(){return g.isAuthenticated()?t.when(g.currentUser):e.get("/api/current_user.json").then(function(e){return g.currentUser=e.data,g.currentUser})},currentUser:null,isAuthenticated:function(){return!!g.currentUser},isAdmin:function(){return!(!g.currentUser||!g.currentUser.admin)}};return g}function RetryQueue(e,t){"use strict";var i=[],n={onItemAddedCallbacks:[],hasMore:function(){return i.length>0},push:function(e){t.info("retryQueue.push() called with item: "+e),i.push(e),angular.forEach(n.onItemAddedCallbacks,function(i){try{i(e)}catch(n){t.error("securityRetryQueue.push(retryItem): callback threw an error"+n)}})},pushRetryFn:function(t,i){1===arguments.length&&(i=t,t=void 0);var r=e.defer(),o={reason:t,retry:function(){e.when(i()).then(function(e){r.resolve(e)},function(e){r.reject(e)})},cancel:function(){r.reject()}};return n.push(o),r.promise},retryReason:function(){return n.hasMore()&&i[0].reason},cancelAll:function(){for(;n.hasMore();)i.shift().cancel()},retryAll:function(){for(t.info("RetryQueue.retryall() called.");n.hasMore();)i.shift().retry()}};return n}function Interceptor(e,t){"use strict";return function(i){return i.then(null,function(n){return 401===n.status&&(i=t.pushRetryFn("unauthorized-server",function(){return e.get("$http")(n.config)})),i})}}function interceptorServiceConfig(e){"use strict";e.responseInterceptors.push("Interceptor")}function sessionInfo(e,t){"use strict";return{restrict:"EA",template:"<h2>CIViC Server URL: {{ conf.serverUrl }}</h2>",link:function(i){t.info("sessionInfo directive loaded."),i.conf=e}}}function mainMenu(){"use strict";var e={restrict:"E",templateUrl:"common/directives/mainMenu.tpl.html",replace:!0,scope:!0};return e}function pagesConfig(e,t){"use strict";e.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"/civic-client/pages/home/home.tpl.html"}).state("authTest",{url:"/authTest",controller:"AuthTestCtrl",templateUrl:"/civic-client/pages/authTest/authTest.tpl.html",resolve:{authorized:t.requireAuthenticatedUser}})}angular.module("civic.security.login.toolbar",[]).directive("loginToolbar",loginToolbar),loginToolbar.$inject=["Security"],angular.module("civic.security.login",["civic.security.login.form","civic.security.login.toolbar"]),angular.module("civic.security.login.form",[]).controller("LoginFormController",LoginFormController),LoginFormController.$inject=["$scope","Security"],angular.module("civicClient",["ui.router","ui.bootstrap","dialogs.main","civic.pages","civic.security","civic.services","civic.common","civic.login","civic-client-templates"]).config(appConfig).run(appRun),appConfig.$inject=["$stateProvider","$urlRouterProvider"],appRun.$inject=["Security"],angular.module("civic.security",["civic.security.authorization","civic.security.service","civic.security.interceptor","civic.security.login"]),angular.module("civic.services",[]),angular.module("civic.pages",["civic.security.authorization"]),angular.module("civic.common",[]),angular.module("civic.login",[]),angular.module("civic.browse",[]),angular.module("civic.search",[]),angular.module("civic.gene",[]),angular.module("civic.event",[]),angular.module("civic.evidence",[]),angular.module("civic.pages").controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=["$rootScope","$scope","$log"],angular.module("civic.pages").controller("AuthTestCtrl",AuthTestCtrl),AuthTestCtrl.$inject=["$scope","$rootScope","$log"],angular.module("civic.services").constant("ConfigService",{serverUrl:"http://localhost:3000/"}),angular.module("civic.security.service",["civic.security.retryQueue","civic.security.login","dialogs.main"]).factory("Security",Security),Security.$inject=["$http","$q","$location","RetryQueue","dialogs","$log"],angular.module("civic.security.retryQueue",[]).factory("RetryQueue",RetryQueue),RetryQueue.$inject=["$q","$log"],angular.module("civic.security.interceptor",["civic.security.retryQueue"]).factory("Interceptor",Interceptor).config(interceptorServiceConfig),Interceptor.$inject=["$injector","RetryQueue"],interceptorServiceConfig.$inject=["$httpProvider"],angular.module("civic.security.authorization",["civic.security.service"]).provider("Authorization",{requireAdminUser:function(e){"use strict";return e.requireAdminUser()},requireAuthenticatedUser:function(e){"use strict";return e.requireAuthenticatedUser()},$get:["Security","RetryQueue",function(e,t){"use strict";var i={requireAuthenticatedUser:function(){var n=e.requestCurrentUser().then(function(){return e.isAuthenticated()?void 0:t.pushRetryFn("unauthenticated-client",i.requireAuthenticatedUser)});return n},requireAdminUser:function(){var n=e.requestCurrentUser().then(function(){return e.isAdmin()?void 0:t.pushRetryFn("unauthorized-client",i.requireAdminUser)});return n}};return i}]}),angular.module("civic.common").directive("sessionInfo",sessionInfo),sessionInfo.$inject=["ConfigService","$log"],angular.module("civic.common").directive("mainMenu",mainMenu),angular.module("civic.pages").config(pagesConfig),pagesConfig.$inject=["$stateProvider","AuthorizationProvider"],function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/common/directives/mainMenu.tpl.html",'<ul><li><a ui-sref="home">Home</a></li><li><a ui-sref="authTest">Auth Test</a></li></ul>')}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/pages/authTest/authTest.tpl.html","<h1>Requires Auth</h1><session-info></session-info><login-toolbar></login-toolbar>")}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/pages/home/home.tpl.html","<h1>Home</h1><session-info></session-info><login-toolbar></login-toolbar>")}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/common/security/login/LoginForm.tpl.html",'<form name="form" novalidate class="login-form"><div class="modal-header"><h4>Sign in</h4></div><div class="modal-body"><div class="alert alert-warning" ng-show="authReason">{{authReason}}</div><div class="alert alert-error" ng-show="authError">{{authError}}</div><div class="alert alert-info">Login by choosing one of the methods below:</div><ul><li><a href="api/auth/github">Login with Github</a></li></ul></div><div class="modal-footer"><button class="btn btn-warning cancel" ng-click="cancelLogin()">Cancel</button></div></form>')}])}(),function(e){try{e=angular.module("civic-client-templates")}catch(t){e=angular.module("civic-client-templates",[])}e.run(["$templateCache",function(e){e.put("/civic-client/common/security/login/loginToolbar.tpl.html",'<ul class="nav pull-right"><li class="divider-vertical"></li><li ng-show="isAuthenticated()"><a href="#">{{currentUser.name}} {{currentUser.lastName}}</a></li><li ng-show="isAuthenticated()" class="logout"><form class="navbar-form"><button class="btn logout" ng-click="logout(\'home\')">Log out</button></form></li><li ng-hide="isAuthenticated()" class="login"><form class="navbar-form"><button class="btn login" ng-click="login()">Log in</button></form></li></ul>')}])}();